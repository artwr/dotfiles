[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "parameters" : [

        ],
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.logger",
        "name" : "logger"
      },
      {
        "doc" : "Table containing a sample set of hotkeys that can be\nassigned to the different operations. These are not bound\nby default - if you want to use them you have to call:\n`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`\nafter loading the spoon. Value:\n```\n {\n    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },\n    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },\n    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },\n    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },\n    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },\n    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },\n    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },\n    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },\n    top_left    = { {\"ctrl\",        \"cmd\"}, \"1\" },\n    top_right   = { {\"ctrl\",        \"cmd\"}, \"2\" },\n    bottom_left = { {\"ctrl\",        \"cmd\"}, \"3\" },\n    bottom_right= { {\"ctrl\",        \"cmd\"}, \"4\" },\n    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },\n    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },\n    undo        = { {        \"alt\", \"cmd\"}, \"z\" },\n    center      = { {        \"alt\", \"cmd\"}, \"c\" },\n    larger      = { {        \"alt\", \"cmd\", \"shift\"}, \"Right\" },\n    smaller     = { {        \"alt\", \"cmd\", \"shift\"}, \"Left\" },\n }\n```",
        "parameters" : [

        ],
        "stripped_doc" : [
          "Table containing a sample set of hotkeys that can be",
          "assigned to the different operations. These are not bound",
          "by default - if you want to use them you have to call:",
          "`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`",
          "after loading the spoon. Value:",
          "```",
          " {",
          "    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },",
          "    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },",
          "    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },",
          "    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },",
          "    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },",
          "    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },",
          "    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },",
          "    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },",
          "    top_left    = { {\"ctrl\",        \"cmd\"}, \"1\" },",
          "    top_right   = { {\"ctrl\",        \"cmd\"}, \"2\" },",
          "    bottom_left = { {\"ctrl\",        \"cmd\"}, \"3\" },",
          "    bottom_right= { {\"ctrl\",        \"cmd\"}, \"4\" },",
          "    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },",
          "    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },",
          "    undo        = { {        \"alt\", \"cmd\"}, \"z\" },",
          "    center      = { {        \"alt\", \"cmd\"}, \"c\" },",
          "    larger      = { {        \"alt\", \"cmd\", \"shift\"}, \"Right\" },",
          "    smaller     = { {        \"alt\", \"cmd\", \"shift\"}, \"Left\" },",
          " }",
          "```"
        ],
        "desc" : "Table containing a sample set of hotkeys that can be",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.defaultHotkeys",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.defaultHotkeys",
        "name" : "defaultHotkeys"
      },
      {
        "doc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "parameters" : [

        ],
        "stripped_doc" : [
          "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`"
        ],
        "desc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.use_frame_correctness",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.use_frame_correctness",
        "name" : "use_frame_correctness"
      },
      {
        "doc" : "We don't want our undo frame cache filling all available memory. Let's clear it after it hasn't been used for a while.",
        "parameters" : [

        ],
        "stripped_doc" : [
          "We don't want our undo frame cache filling all available memory. Let's clear it after it hasn't been used for a while."
        ],
        "desc" : "We don't want our undo frame cache filling all available memory. Let's clear it after it hasn't been used for a while.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.clear_cache_after_seconds",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.clear_cache_after_seconds",
        "name" : "clear_cache_after_seconds"
      }
    ],
    "stripped_doc" : [

    ],
    "type" : "Module",
    "Deprecated" : [

    ],
    "desc" : "Simple window movement and resizing, focusing on half- and third-of-screen sizes",
    "Constructor" : [

    ],
    "Field" : [

    ],
    "Method" : [
      {
        "doc" : "Resize to the left half of the screen.\nAlso various other action methods. See WindowHalfsAndThirds:bindHotkeys for details\n  .leftHalf .rightHalf .topHalf .bottomHalf .thirdLeft .thirdRight .leftThird .middleThirdH .rightThird\n  .thirdUp .thirdDown .topThird .middleThirdV .bottomThird .topLeft .topRight .bottomLeft .bottomRight\n  .maximize\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Resize to the left half of the screen.",
          "Also various other action methods. See WindowHalfsAndThirds:bindHotkeys for details",
          "  .leftHalf .rightHalf .topHalf .bottomHalf .thirdLeft .thirdRight .leftThird .middleThirdH .rightThird",
          "  .thirdUp .thirdDown .topThird .middleThirdV .bottomThird .topLeft .topRight .bottomLeft .bottomRight",
          "  .maximize",
          ""
        ],
        "desc" : "Resize to the left half of the screen.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:leftHalf(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:leftHalf(win)",
        "name" : "leftHalf"
      },
      {
        "doc" : "Toggle win between its normal size, and being maximized\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Toggle win between its normal size, and being maximized",
          ""
        ],
        "desc" : "Toggle win between its normal size, and being maximized",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:toggleMaximized(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:toggleMaximized(win)",
        "name" : "toggleMaximized"
      },
      {
        "doc" : "Undo window size changes for win if there've been any in WindowHalfsAndThirds.clear_cache_after_seconds\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Undo window size changes for win if there've been any in WindowHalfsAndThirds.clear_cache_after_seconds",
          ""
        ],
        "desc" : "Undo window size changes for win if there've been any in WindowHalfsAndThirds.clear_cache_after_seconds",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:undo(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:undo(win)",
        "name" : "undo"
      },
      {
        "doc" : "Center window on screen\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Center window on screen",
          ""
        ],
        "desc" : "Center window on screen",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:center(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:center(win)",
        "name" : "center"
      },
      {
        "doc" : "Make win larger than its current size\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Make win larger than its current size",
          ""
        ],
        "desc" : "Make win larger than its current size",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:larger(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:larger(win)",
        "name" : "larger"
      },
      {
        "doc" : "Make win smaller than its current size\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Make win smaller than its current size",
          ""
        ],
        "desc" : "Make win smaller than its current size",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:smaller(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:smaller(win)",
        "name" : "smaller"
      },
      {
        "doc" : "Binds hotkeys for WindowHalfsAndThirds\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen\n  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right\n  * third_up, third_down - resize to one vertical-third of the screen and move up\/down\n  * max - maximize the window\n  * max_toggle - toggle maximization\n  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen\n  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen\n  * top_left, top_right, bottom_left, bottom_right - resize and move the window to the corresponding quarter of the screen\n  * undo - restore window to position before last move\n  * center - move window to center of screen\n  * larger - grow window larger than its current size\n  * smaller - shrink window smaller than its current size\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen",
          "  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right",
          "  * third_up, third_down - resize to one vertical-third of the screen and move up\/down",
          "  * max - maximize the window",
          "  * max_toggle - toggle maximization",
          "  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen",
          "  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen",
          "  * top_left, top_right, bottom_left, bottom_right - resize and move the window to the corresponding quarter of the screen",
          "  * undo - restore window to position before last move",
          "  * center - move window to center of screen",
          "  * larger - grow window larger than its current size",
          "  * smaller - shrink window smaller than its current size",
          ""
        ],
        "stripped_doc" : [
          "Binds hotkeys for WindowHalfsAndThirds",
          ""
        ],
        "desc" : "Binds hotkeys for WindowHalfsAndThirds",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "name" : "bindHotkeys"
      }
    ],
    "Command" : [

    ],
    "items" : [
      {
        "doc" : "We don't want our undo frame cache filling all available memory. Let's clear it after it hasn't been used for a while.",
        "parameters" : [

        ],
        "stripped_doc" : [
          "We don't want our undo frame cache filling all available memory. Let's clear it after it hasn't been used for a while."
        ],
        "desc" : "We don't want our undo frame cache filling all available memory. Let's clear it after it hasn't been used for a while.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.clear_cache_after_seconds",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.clear_cache_after_seconds",
        "name" : "clear_cache_after_seconds"
      },
      {
        "doc" : "Table containing a sample set of hotkeys that can be\nassigned to the different operations. These are not bound\nby default - if you want to use them you have to call:\n`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`\nafter loading the spoon. Value:\n```\n {\n    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },\n    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },\n    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },\n    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },\n    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },\n    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },\n    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },\n    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },\n    top_left    = { {\"ctrl\",        \"cmd\"}, \"1\" },\n    top_right   = { {\"ctrl\",        \"cmd\"}, \"2\" },\n    bottom_left = { {\"ctrl\",        \"cmd\"}, \"3\" },\n    bottom_right= { {\"ctrl\",        \"cmd\"}, \"4\" },\n    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },\n    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },\n    undo        = { {        \"alt\", \"cmd\"}, \"z\" },\n    center      = { {        \"alt\", \"cmd\"}, \"c\" },\n    larger      = { {        \"alt\", \"cmd\", \"shift\"}, \"Right\" },\n    smaller     = { {        \"alt\", \"cmd\", \"shift\"}, \"Left\" },\n }\n```",
        "parameters" : [

        ],
        "stripped_doc" : [
          "Table containing a sample set of hotkeys that can be",
          "assigned to the different operations. These are not bound",
          "by default - if you want to use them you have to call:",
          "`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`",
          "after loading the spoon. Value:",
          "```",
          " {",
          "    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },",
          "    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },",
          "    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },",
          "    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },",
          "    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },",
          "    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },",
          "    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },",
          "    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },",
          "    top_left    = { {\"ctrl\",        \"cmd\"}, \"1\" },",
          "    top_right   = { {\"ctrl\",        \"cmd\"}, \"2\" },",
          "    bottom_left = { {\"ctrl\",        \"cmd\"}, \"3\" },",
          "    bottom_right= { {\"ctrl\",        \"cmd\"}, \"4\" },",
          "    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },",
          "    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },",
          "    undo        = { {        \"alt\", \"cmd\"}, \"z\" },",
          "    center      = { {        \"alt\", \"cmd\"}, \"c\" },",
          "    larger      = { {        \"alt\", \"cmd\", \"shift\"}, \"Right\" },",
          "    smaller     = { {        \"alt\", \"cmd\", \"shift\"}, \"Left\" },",
          " }",
          "```"
        ],
        "desc" : "Table containing a sample set of hotkeys that can be",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.defaultHotkeys",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.defaultHotkeys",
        "name" : "defaultHotkeys"
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "parameters" : [

        ],
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.logger",
        "name" : "logger"
      },
      {
        "doc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "parameters" : [

        ],
        "stripped_doc" : [
          "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`"
        ],
        "desc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.use_frame_correctness",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "WindowHalfsAndThirds.use_frame_correctness",
        "name" : "use_frame_correctness"
      },
      {
        "doc" : "Binds hotkeys for WindowHalfsAndThirds\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen\n  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right\n  * third_up, third_down - resize to one vertical-third of the screen and move up\/down\n  * max - maximize the window\n  * max_toggle - toggle maximization\n  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen\n  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen\n  * top_left, top_right, bottom_left, bottom_right - resize and move the window to the corresponding quarter of the screen\n  * undo - restore window to position before last move\n  * center - move window to center of screen\n  * larger - grow window larger than its current size\n  * smaller - shrink window smaller than its current size\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen",
          "  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right",
          "  * third_up, third_down - resize to one vertical-third of the screen and move up\/down",
          "  * max - maximize the window",
          "  * max_toggle - toggle maximization",
          "  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen",
          "  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen",
          "  * top_left, top_right, bottom_left, bottom_right - resize and move the window to the corresponding quarter of the screen",
          "  * undo - restore window to position before last move",
          "  * center - move window to center of screen",
          "  * larger - grow window larger than its current size",
          "  * smaller - shrink window smaller than its current size",
          ""
        ],
        "stripped_doc" : [
          "Binds hotkeys for WindowHalfsAndThirds",
          ""
        ],
        "desc" : "Binds hotkeys for WindowHalfsAndThirds",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "name" : "bindHotkeys"
      },
      {
        "doc" : "Center window on screen\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Center window on screen",
          ""
        ],
        "desc" : "Center window on screen",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:center(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:center(win)",
        "name" : "center"
      },
      {
        "doc" : "Make win larger than its current size\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Make win larger than its current size",
          ""
        ],
        "desc" : "Make win larger than its current size",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:larger(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:larger(win)",
        "name" : "larger"
      },
      {
        "doc" : "Resize to the left half of the screen.\nAlso various other action methods. See WindowHalfsAndThirds:bindHotkeys for details\n  .leftHalf .rightHalf .topHalf .bottomHalf .thirdLeft .thirdRight .leftThird .middleThirdH .rightThird\n  .thirdUp .thirdDown .topThird .middleThirdV .bottomThird .topLeft .topRight .bottomLeft .bottomRight\n  .maximize\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Resize to the left half of the screen.",
          "Also various other action methods. See WindowHalfsAndThirds:bindHotkeys for details",
          "  .leftHalf .rightHalf .topHalf .bottomHalf .thirdLeft .thirdRight .leftThird .middleThirdH .rightThird",
          "  .thirdUp .thirdDown .topThird .middleThirdV .bottomThird .topLeft .topRight .bottomLeft .bottomRight",
          "  .maximize",
          ""
        ],
        "desc" : "Resize to the left half of the screen.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:leftHalf(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:leftHalf(win)",
        "name" : "leftHalf"
      },
      {
        "doc" : "Make win smaller than its current size\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Make win smaller than its current size",
          ""
        ],
        "desc" : "Make win smaller than its current size",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:smaller(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:smaller(win)",
        "name" : "smaller"
      },
      {
        "doc" : "Toggle win between its normal size, and being maximized\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Toggle win between its normal size, and being maximized",
          ""
        ],
        "desc" : "Toggle win between its normal size, and being maximized",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:toggleMaximized(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:toggleMaximized(win)",
        "name" : "toggleMaximized"
      },
      {
        "doc" : "Undo window size changes for win if there've been any in WindowHalfsAndThirds.clear_cache_after_seconds\n\nParameters:\n * win - hs.window to use, defaults to hs.window.focusedWindow()\n\nReturns:\n * the WindowHalfsAndThirds object",
        "parameters" : [
          " * win - hs.window to use, defaults to hs.window.focusedWindow()",
          ""
        ],
        "stripped_doc" : [
          "Undo window size changes for win if there've been any in WindowHalfsAndThirds.clear_cache_after_seconds",
          ""
        ],
        "desc" : "Undo window size changes for win if there've been any in WindowHalfsAndThirds.clear_cache_after_seconds",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:undo(win)",
        "type" : "Method",
        "returns" : [
          " * the WindowHalfsAndThirds object"
        ],
        "def" : "WindowHalfsAndThirds:undo(win)",
        "name" : "undo"
      }
    ],
    "doc" : "Simple window movement and resizing, focusing on half- and third-of-screen sizes\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WindowHalfsAndThirds.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WindowHalfsAndThirds.spoon.zip)",
    "name" : "WindowHalfsAndThirds"
  }
]